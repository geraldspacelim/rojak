{"version":3,"sources":["logo.svg","components/poems-list.component.js","components/corpus-list.component.js","components/create-rojak.component.js","components/edit-corpus.component.js","components/rojak-poem.component.js","components/add-sauce.component.js","components/navbar.component.js","components/about-us.component.js","App.js","reportWebVitals.js","index.js"],"names":["PoemsList","props","state","rojakPoems","axios","get","then","response","data","length","setState","catch","error","console","log","Grid","container","spacing","direction","justify","alignItems","this","map","p","item","xs","sm","md","Card","CardHeader","title","projectName","subheader","author","CardContent","Typography","gutterBottom","projectDescription","CardActions","Button","size","to","_id","style","textDecoration","Component","Term","singlishTerms","term","singlishTerm","text","slice","englishTerm","definition","CorpusList","terms","currentTerm","Table","striped","bordered","hover","termsList","PoemLine","poemLine","extraTerm","tooltipEn","tooltipDef","tooltipSg","prev","termsDict","forEach","line","lineNum","sgTerm","sgExtraTerms","Popover","Content","Row","className","Col","searchText","Form","Label","column","OverlayTrigger","placement","overlay","id","Title","as","searchWords","caseSensitive","textToHighlight","dataLabel","Control","type","required","value","onChange","e","onChangePoemLine","CreateRojak","onNext","bind","onChangeProjectAuthor","onChangeProjectTitle","onChangeProjectDescription","onSubmit","credentialsState","projectAuthor","projectTitle","englishTerms","actualPoem","fetchData","target","tempActualPoem","currentpoemLine","preventDefault","window","location","rojakPoem","post","res","Group","placeholder","Text","rows","variant","onClick","backToPrevious","span","offset","PoemLinesList","Container","discardChanges","EditCorpus","onChangeNewSinglishTerm","newSinglishTerm","match","params","Badge","pill","tempSinglishTerms","newSinglishTermObj","push","corpusList","RojakPoem","poemFormat","AddSauce","onChangePoetName","onChangePoemTitle","onChangePoem","onChangeTranslation","poetName","poemTitle","poem","translation","newSauce","controlId","Navbar","AboutUs","directToRepo","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59ea51b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\n// import { Col  } from \"react-bootstrap\";\nimport axios from 'axios'\n// import { makeStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom';\n\nimport {\n    Grid,\n    Card,\n    CardContent,\n    Typography,\n    CardHeader,\n    Button,\n    CardActions\n} from '@material-ui/core/'\n\n\nexport default class PoemsList extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            rojakPoems: [],\n        }\n    } \n\n    componentDidMount() {\n        axios.get('http://localhost:5000/poems/getRojakPoems/')\n        .then(response => {\n            if (response.data.length > 0) {\n                this.setState({\n                    rojakPoems: response.data,\n                  })    \n            }  \n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n    }\n\n    render() {\n        // const classes = useStyles();\n        return (\n            <div>\n            {/* <h3>Poems List</h3> */}\n            <div>\n            <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n            >\n                {this.state.rojakPoems.map(p => (\n                    <Grid item xs={12} sm={6} md={3} key={p._id}>\n                        <Card>\n                            <CardHeader\n                                title={p.projectName}\n                                // title={`quarter : ${elem.quarter}`}\n                                subheader={`By: ${p.author}`}\n                            />\n                            <CardContent>\n                                <Typography gutterBottom>\n                                    {p.projectDescription}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\">\n                                    <Link to={\"/view/\"+p._id} style={{ textDecoration: 'none' }}>Read more</Link>\n                                </Button>\n                            </CardActions>\n                        </Card>\n                     </Grid>\n                ))}\n            </Grid>\n        </div>\n          </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'\nimport { Table } from \"react-bootstrap\";\n\nconst Term = props => {\n    let singlishTerms = \"\"\n    props.term.singlishTerm.map(singlishTerm => {\n        singlishTerms += `${singlishTerm.text},`\n    })\n    singlishTerms = singlishTerms.slice(0, -1); \n    return (\n        <tr>\n        <td>{props.term.englishTerm}</td>\n        <td>{props.term.definition}</td>\n        <td>{singlishTerms}</td>\n        <td>\n          <Link to={\"/edit/\"+props.term._id}>edit</Link>\n        </td>\n      </tr>\n    )\n}\n\nexport default class CorpusList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {terms: []};\n    } \n\n    componentDidMount() {\n        axios.get('http://localhost:5000/terms/getTerms')\n            .then(response => {\n                console.log(response)\n                this.setState({ terms: response.data})\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n\n    termsList() {\n        return this.state.terms.map(currentTerm => {\n          return <Term term={currentTerm} key={currentTerm._id}/>;\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n            {/* <h3>Terms</h3> */}\n            <Table striped bordered hover>\n            <thead>\n                <tr>\n                <th>Chim Terms</th>\n                <th>Definition</th>\n                <th>Singlish</th>\n                <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                { this.termsList() }\n            </tbody>\n            </Table>\n        </div>\n        )\n    }\n\n}\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { Form, Button, Row, Col, OverlayTrigger, Container, Popover  } from \"react-bootstrap\";\nimport Highlighter from \"react-highlight-words\";\n\nconst PoemLine = (props) => {\n\n    if (props.poemLine.text != \"blank\") {\n        let tooltipEn = \"\"\n        let tooltipDef = \"\"\n        let tooltipSg = \"\"\n        let prev = 0;\n        let extraTerm;\n        props.termsDict.forEach(term => {\n            if (props.poemLine.line == term.lineNum) {\n                tooltipEn += `${term.englishTerm}, `\n                if (term.lineNum != prev) {\n                    tooltipDef = term.definition\n                    term.singlishTerm.forEach(sgTerm => {\n                        tooltipSg += `${sgTerm.text},`\n                    })\n                    tooltipSg = tooltipSg.slice(0, -1);  \n                } else {\n                    let sgExtraTerms = \"\"\n                    term.singlishTerm.forEach(sgTerm => {\n                        sgExtraTerms += `${sgTerm.text},`\n                    })\n                    sgExtraTerms = sgExtraTerms.slice(0, -1);  \n                    extraTerm =  <Popover.Content>\n                    <strong>Definition: </strong>{term.definition}<br/>\n                    <strong>Singlish Terms: </strong>{sgExtraTerms}<br/>                                           \n                    </Popover.Content>\n                }\n                prev = term.lineNum\n            }\n        });\n        tooltipEn = tooltipEn.slice(0, -2);\n        return  (\n            // <Form >\n            //     <Form.Group>\n                    <Row className=\"add-space\">\n                        <Col>\n                                {props.poemLine.searchText.length > 0 ? \n                                 <Form.Label column sm=\"12\">\n                                    <OverlayTrigger\n                                        key={\"top\"}\n                                        placement={\"right\"}\n                                        overlay={\n                                            <Popover id=\"popover-basic\">\n                                                <Popover.Title as=\"h3\">{tooltipEn}</Popover.Title>\n                                                <Popover.Content>\n                                                    <strong>Definition: </strong>{tooltipDef}<br/>\n                                                    <strong>Singlish Terms: </strong>{tooltipSg}<br/>                                           \n                                                </Popover.Content>\n                                                {extraTerm}\n                                            </Popover>\n                                        }\n                                        >\n                                        <Highlighter searchWords={props.poemLine.searchText} caseSensitive={false} textToHighlight={props.dataLabel[props.poemLine.line-1].text}/>\n                                    </OverlayTrigger>\n                                    </Form.Label>\n                                    :  <Form.Label column sm=\"12\">{props.dataLabel[props.poemLine.line-1].text}</Form.Label>\n                                }\n                        </Col>\n                        <Col>\n                            <Form.Control type=\"text\" required value={props.poemLine.text} onChange={(e) => props.onChangePoemLine(props.poemLine.line, e)}/>\n                        </Col>\n                    </Row>\n    //         </Form.Group>\n    //    </Form>\n        )    \n    }  else {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default class CreateRojak extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onNext = this.onNext.bind(this);\n        this.onChangeProjectAuthor = this.onChangeProjectAuthor.bind(this);\n        this.onChangeProjectTitle = this.onChangeProjectTitle.bind(this);\n        this.onChangeProjectDescription = this.onChangeProjectDescription.bind(this);\n        this.onChangePoemLine = this.onChangePoemLine.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            credentialsState: false,\n            projectAuthor: \"\",\n            projectTitle: \"\",\n            englishTerms: [],\n            terms: [],\n            actualPoem: [], \n            caseSensitive: false,\n            projectDescription: \"\", \n            dataLabel: [{\"line\": 1,\"text\": \"I met him down upon the pier;\"},{\"line\": 2,\"text\": \"His eyes were wild and sad,\"},{\"line\": 3,\"text\": \"And something in them made me fear\"},{\"line\": 4,\"text\": \"That he was going mad.\"},{\"line\": 5,\"text\": \"\"},{\"line\": 6,\"text\": \"So, being of a prudent sort,\"},{\"line\": 7,\"text\": \"I stood some distance off,\"},{\"line\": 8,\"text\": \"And before speaking gave a short\"},{\"line\": 9,\"text\": \"Conciliatory cough.\"},{\"line\": 10,\"text\": \"\"},{\"line\": 11,\"text\": \"I then observed, 'What makes you look\"},{\"line\": 12,\"text\": \"So singularly glum?'\"},{\"line\": 13,\"text\": \"No notice of my words he took.\"},{\"line\": 14,\n            \"text\": \"I said, 'Pray, are you dumb?'\"},{\"line\": 15,\"text\": \"\"},{\"line\": 16,\"text\": \"'Oh no!' he said, 'I do not think\"},{\n            \"line\": 17,\"text\": \"My power of speech is lost,\"},{\"line\": 18,\"text\": \"But when one's hopes are black as ink,\"},{\"line\": 19,\"text\": \"Why, talking is a frost.\"},{\"line\": 20,\"text\": \"\"},{\"line\": 21,\"text\": \"'You see, I'm in for Math. again,\"},{\"line\": 22,\n            \"text\": \"And certain to be ploughed.\"},{\"line\": 23,\"text\": \"Please tell me where I could obtain\"},{\"line\": 24,\"text\": \"An inexpensive shroud.'\"},{\"line\": 25,\"text\": \"\"},{\"line\": 26,\"text\": \"I told him where such things are had,\"},{\"line\": 27,\"text\": \"Well made, and not too dear;\"},{\"line\": 28,\"text\": \"And, feeling really very sad,\"},{\"line\": 29,\"text\": \"I left him on the pier\"}],\n        };\n\n    } \n\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    fetchData() {\n        axios.get('http://localhost:5000/poems/getActualPoem')\n        .then(response => {\n            if (response.data[0].actualPoem.length > 0 ) {\n                // console.log(response.data[0].actualPoem)\n                this.setState(\n                    {\n                        actualPoem: response.data[0].actualPoem,\n                    }\n                )\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n\n        axios.get('http://localhost:5000/terms/getTerms')\n        .then(response => {\n            if (response.data.length > 0 ) {\n                // console.log(response)\n                this.setState(\n                    {\n                        terms: response.data,\n                    }\n                )\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n    }\n\n    onChangeProjectDescription(e) {\n        this.setState({\n            projectDescription: e.target.value\n        }) \n     }\n\n    onChangeProjectAuthor(e) {\n        this.setState({\n            projectAuthor: e.target.value\n        }) \n     }\n\n     onChangeProjectTitle(e) {\n        this.setState({\n            projectTitle: e.target.value\n        }) \n     }\n\n     onChangePoemLine(id, e) {\n        //  console.log(this.state.actualPoem)\n         let tempActualPoem = [...this.state.actualPoem]\n         tempActualPoem[id-1].text = e.target.value\n         this.setState({\n            actualPoem: tempActualPoem\n         })\n        //  console.log(this.state.toBeSubmittedPoem[id-1].text)\n     }\n\n     PoemLinesList() {\n        return this.state.actualPoem.map(currentpoemLine => {\n          return <PoemLine poemLine={currentpoemLine} dataLabel= {this.state.dataLabel} onChangePoemLine={this.onChangePoemLine} key ={currentpoemLine.line} termsDict = {this.state.terms} onSubmit={this.onNext}/>;\n        })\n    }\n\n\n    onNext(e) {\n        e.preventDefault()\n       this.setState({ \n           credentialsState: true \n       })\n    }\n\n    backToPrevious() {\n        // e.preventDefault();\n        this.setState({\n            credentialsState: false\n        })\n    }\n\n    discardChanges() {\n        window.location = '/'\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        const rojakPoem = {\n            projectName: this.state.projectTitle,\n            author: this.state.projectAuthor,\n            rojakPoem: this.state.actualPoem,\n            projectDescription: this.state.projectDescription,\n        }\n\n        // console.log(rojakPoem)\n        axios.post('http://localhost:5000/poems/addRojakPoem', rojakPoem)\n        .then(res => console.log(res.data));\n\n        window.location = '/'\n    }\n\n\n    render() {\n        if (this.state.credentialsState) {\n            return (\n                <div>\n                   <Form onSubmit={this.onSubmit}>\n                    <Form.Group>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Emily Dickinson\" value={this.state.projectAuthor}\n                        onChange={this.onChangeProjectAuthor}/>\n                        <Form.Text className=\"text-muted\">\n                        We want to know the proud author of this project\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Project Title</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"A project like no other\" value={this.state.projectTitle}\n                        onChange={this.onChangeProjectTitle}/>\n                        <Form.Text className=\"text-muted\">\n                        Give your project a unique name\n                    </Form.Text>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Project Description</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Lorem Ipsum\" value={this.state.projectDescription} onChange={this.onChangeProjectDescription} as=\"textarea\" rows={2} />\n                        <Form.Text className=\"text-muted\">\n                        Tell me more about this project \n                    </Form.Text>\n                    </Form.Group>\n                     <Row>\n                            <Col md={1}>\n                            <Button variant=\"danger\" onClick={() => {this.backToPrevious()}}>\n                                Previous\n                            </Button>\n                            </Col>\n                            <Col md={{ span: 2, offset: 0.5 }}>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <br></br>\n                <h3>An Interview</h3>\n                <h5>By Robert Fuller Murray</h5>\n                {/* {this.PoemLinesList()} */}\n                  <Form onSubmit={this.onNext}>\n                  {this.PoemLinesList()}\n                    <Container>\n                        <Row>\n                            <Col md={1}>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Continue\n                            </Button>\n                            </Col>\n                            <Col md={{ span: 2, offset: 0.5 }}>\n                            <Button variant=\"danger\" onClick={() => {this.discardChanges()}}>\n                                Discard Changes\n                            </Button>\n                            </Col>\n                        </Row>\n                    </Container>\n                  </Form>\n          </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { Badge, Form, Button } from \"react-bootstrap\";\n\nexport default class EditCorpus extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeNewSinglishTerm = this.onChangeNewSinglishTerm.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            lineNum: 0,\n            singlishTerm: [],\n            englishTerm: '',\n            definition: '',\n            newSinglishTerm: \"\"\n          }\n        \n    } \n\n    componentDidMount() {\n        console.log(this.props.match.params.id)\n        axios.get('http://localhost:5000/terms/getTerm/'+this.props.match.params.id)\n        .then(response => {\n          this.setState({\n            singlishTerm: response.data.singlishTerm,\n            englishTerm: response.data.englishTerm,\n            definition: response.data.definition,\n            lineNum: response.data.lineNum\n          })   \n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n    }\n\n    corpusList() {\n        return this.state.singlishTerm.map(sgTerm => {\n            return (<Badge pill variant=\"primary\" key={sgTerm._id}>\n                {sgTerm.text}\n            </Badge>)\n        })\n    }\n\n    onChangeNewSinglishTerm(e) {\n        this.setState({\n            newSinglishTerm: e.target.value\n        }) \n     }\n\n    onSubmit(e) {\n        e.preventDefault()\n        let tempSinglishTerms = [...this.state.singlishTerm] \n        const newSinglishTermObj = {\n            id: tempSinglishTerms.length,\n            text: this.state.newSinglishTerm \n        }\n        tempSinglishTerms.push(newSinglishTermObj)\n        const term = {\n            singlishTerm: tempSinglishTerms, \n            englishTerm: this.state.englishTerm, \n            lineNum: this.state.lineNum, \n            definition: this.state.definition\n        }\n\n        axios.post('http://localhost:5000/terms/update/' + this.props.match.params.id, term)\n        .then(res => console.log(res.data));\n\n        window.location = '/'\n    }\n\n\n    render() {\n        return (\n            <div>\n            <h3>{this.state.englishTerm}</h3>\n            <h10><strong>Definition:</strong>{this.state.definition}</h10><br/>\n            {this.corpusList()}\n            <Form onSubmit={this.onSubmit}>\n                    <Form.Group>\n                        <Form.Label>Add a new singlish term: </Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Your singlish term here\" value={this.state.newSinglishTerm}\n                        onChange={this.onChangeNewSinglishTerm}/>\n                     <br></br>\n                     <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                    </Button>\n            </Form.Group>\n            </Form>\n          </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport axios from 'axios'\nimport '../App.css'\n\nexport default class RojakPoem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            author: \"\", \n            projectName: \"\",\n            rojakPoem: []\n        }\n        \n    } \n\n    componentDidMount() {\n        console.log(this.props.match.params.id)\n        axios.get('http://localhost:5000/poems/view/'+this.props.match.params.id)\n        .then(response => {\n            console.log(response)\n          this.setState({\n            author: response.data.author,\n            projectName: response.data.projectName,\n            rojakPoem: response.data.rojakPoem,\n          })   \n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n    }\n\n    poemFormat() {\n        return this.state.rojakPoem.map(poemLine => {\n            if (poemLine.text == \"blank\") {\n                return (<br></br>)\n            } else {\n                return (\n                    <p>{poemLine.text}</p>\n                )\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n            <h3>{this.state.projectName}</h3>\n            <h5>BY <u>{this.state.author}</u></h5>\n            <br></br>\n            <br></br>\n            {this.poemFormat()}\n          </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from 'axios'\nimport '../App.css'\n\nexport default class AddSauce extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangePoetName = this.onChangePoetName.bind(this);\n        this.onChangePoemTitle = this.onChangePoemTitle.bind(this);\n        this.onChangePoem = this.onChangePoem.bind(this);\n        this.onChangeTranslation = this.onChangeTranslation.bind(this);\n        this.onSubmit = this.onSubmit.bind(this)\n\n        \n        this.state = {\n            poetName: \"\", \n            poemTitle: \"\",\n            poem: \"\", \n            translation: \"\" \n        }\n        \n    } \n\n    onSubmit(e) {\n        e.preventDefault()\n        const newSauce = {\n            poetName: this.state.poetName,\n            poemTitle: this.state.poemTitle,\n            poem: this.state.poem,\n            translation: this.state.translation,\n        }\n\n        // console.log(rojakPoem)\n        axios.post('http://localhost:5000/poems/addSauce', newSauce)\n        .then(res => console.log(res.data));\n\n        window.location = '/'\n    }\n\n    onChangePoetName(e) {\n        this.setState({\n            poetName: e.target.value\n        }) \n     }\n\n     onChangePoemTitle(e) {\n        this.setState({\n            poemTitle: e.target.value\n        }) \n     }\n\n     onChangePoem(e) {\n        this.setState({\n            poem: e.target.value\n        }) \n     }\n\n     onChangeTranslation(e) {\n        this.setState({\n            translation: e.target.value\n        }) \n     }\n\n\n    render() {\n        return (\n            <div>\n            {/* <h3>Add Sauce</h3> */}\n            <br></br>\n            <br></br>\n            <h5>Suggest a poem and we will add it into the repository poems.</h5>\n            <br></br>\n            <Form onSubmit={this.onSubmit}>\n                <Form.Group>\n                    <Form.Label>Poet Name: </Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Emily Dickinson\" value={this.state.poetName}\n                        onChange={this.onChangePoetName}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Poem Title</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Wild nights - Wild nights!\" value={this.state.onChangePoemTitle}\n                        onChange={this.onChangePoemTitle}/>\n                    </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Paste your poem here: </Form.Label>\n                <Form.Control as=\"textarea\" rows={5} value={this.state.poem} onChange={this.onChangePoem}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Provide some singlish translation here: </Form.Label>\n                <Form.Control as=\"textarea\" rows={5} placeholder=\"Flatter (angkat): cause (someone) to feel honoured and pleased\" value={this.state.translation} onChange={this.onChangeTranslation}/>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n            \n          </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Navbar extends Component {\n    render() {\n      return (\n        <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\n          <Link to=\"/\" className=\"navbar-brand\">ROJAK</Link>\n          <div className=\"collpase navbar-collapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n            <Link to=\"/\" className=\"nav-link\">Home</Link>\n            </li>\n            <li className=\"navbar-item\">\n            <Link to=\"/createrojak\" className=\"nav-link\">Create Rojak</Link>\n            </li>\n            <li className=\"navbar-item\">\n            <Link to=\"/corpus\" className=\"nav-link\">Corpus</Link>\n            </li>\n            <li className=\"navbar-item\">\n            <Link to=\"/addSauce\" className=\"nav-link\">Add Sauce</Link>\n            </li>\n            <li className=\"navbar-item\">\n            <Link to=\"/aboutUs\" className=\"nav-link\">About Us</Link>\n            </li>\n          </ul>\n          </div>\n        </nav>\n      );\n    }\n  }","import React, { Component } from 'react';\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from 'axios'\nimport '../App.css'\n\nexport default class AboutUs extends Component {\n    constructor(props) {\n        super(props);\n    } \n\ndirectToRepo() {\n  window.location = 'https://github.com/geraldspacelim/rojak'\n}\n\nrender() {\n        return (\n          <div className=\"Container\">\n          <br></br>\n          <br></br>  \n          <h5>Do you find poems difficult to understand? Do you want to make poems to read in your own interpretation?Do you want to share your interpretation with others? Come join us in reinterpreting poems, by \"translating\" them into a language you understand better. This website aims to provide definitions to words in poems that seem difficult to understand at first glance, and suggest substitutions that you can use to understand the context of the poem better. We encourage you to use as much slang and Singlish as possible, to make this poem more personal to you and to help us populate our Singlish Database</h5>\n          <br></br>\n          <br></br>\n          <p>Done By: Hazel and Gerald</p>\n          <Button variant=\"dark\" onClick={() => {this.directToRepo()}}>\n              Github Repo\n          </Button>\n          </div>\n        )\n        \n  }\n}","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PoemsList from \"./components/poems-list.component\";\nimport CorpusList from \"./components/corpus-list.component\";\nimport CreateRojak from \"./components/create-rojak.component\";\nimport EditCorpus from \"./components/edit-corpus.component\";\nimport RojakPoem from \"./components/rojak-poem.component\";\nimport AddSauce from \"./components/add-sauce.component\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navbar.component\";\nimport AboutUs from \"./components/about-us.component\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar /> \n        <Route path=\"/\" exact component={PoemsList}/>\n        <Route path=\"/edit/:id\" component={EditCorpus}/>\n        <Route path=\"/view/:id\" component={RojakPoem}/> \n        <Route path=\"/corpus\" component={CorpusList}/>\n        <Route path=\"/createrojak\" component={CreateRojak}/> \n        <Route path='/addSauce' component={AddSauce}/>\n        <Route path=\"/aboutUs\" component={AboutUs}/>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}